// Automatically generated by MockGen. DO NOT EDIT!
// Source: ../vendor/github.com/dgrijalva/jwt-go/signing_method.go

package mocks

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of SigningMethod interface
type MockSigningMethod struct {
	ctrl     *gomock.Controller
	recorder *_MockSigningMethodRecorder
}

// Recorder for MockSigningMethod (not exported)
type _MockSigningMethodRecorder struct {
	mock *MockSigningMethod
}

func NewMockSigningMethod(ctrl *gomock.Controller) *MockSigningMethod {
	mock := &MockSigningMethod{ctrl: ctrl}
	mock.recorder = &_MockSigningMethodRecorder{mock}
	return mock
}

func (_m *MockSigningMethod) EXPECT() *_MockSigningMethodRecorder {
	return _m.recorder
}

func (_m *MockSigningMethod) Verify(signingString string, signature string, key interface{}) error {
	ret := _m.ctrl.Call(_m, "Verify", signingString, signature, key)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockSigningMethodRecorder) Verify(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Verify", arg0, arg1, arg2)
}

func (_m *MockSigningMethod) Sign(signingString string, key interface{}) (string, error) {
	ret := _m.ctrl.Call(_m, "Sign", signingString, key)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSigningMethodRecorder) Sign(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Sign", arg0, arg1)
}

func (_m *MockSigningMethod) Alg() string {
	ret := _m.ctrl.Call(_m, "Alg")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockSigningMethodRecorder) Alg() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Alg")
}
